(declare-sort person)
(declare-sort thing)
(declare-const t thing)
(declare-const Bob person)
(declare-const Charlie person)
(declare-rel payFor (person thing))
(declare-rel belongTo (thing person))
(declare-rel generous (person))
(declare-rel grateful (person))


(assert (not (= Bob Charlie)))

(assert (forall ((x person) (y person)) (= (and (= x Bob) (= y Charlie)) (and (payFor x t) (belongTo t y)))))

(assert (forall ((x person)) (= (= x Charlie) (belongTo t x))))

(assert (forall ((x person) (y person)) (=> (not (= x y)) (= (and (payFor x t) (belongTo t y)) (or (generous x) (grateful y))))))

(assert (forall ((x person)) (= (or (= x Bob) (= x Charlie)) (or (grateful x) (generous x)))))

(assert (exists ((x person)) (generous x)))
(assert (exists ((y person)) (grateful y)))
(check-sat)
(get-model)
