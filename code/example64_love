(declare-sort person)
(declare-sort thing)
(declare-const Mary person)
(declare-const flute thing)
(declare-const pieces thing)
(declare-rel favorite (person thing))
(declare-rel takeOut (person thing))
(declare-rel love (person thing))
(declare-rel have (person thing))


(assert (not (= flute pieces)))
(assert (forall ((x thing)) (or (= x flute) (= x pieces))))
(assert (forall ((x person)) (= x Mary)))

(assert (forall ((x thing)) (exists ((y person)) (= (love y x) (favorite y x)))))
(assert (forall ((x thing)) (exists ((y person)) (= (takeOut y x) (have y x)))))

(assert (= (love Mary flute) (not (love Mary pieces))))
(assert (= (have Mary flute) (not (have Mary pieces))))

(assert (not (=> (and (takeOut Mary flute) (favorite Mary pieces)) (have Mary pieces))))
;(assert (not (=> (and (takeOut Mary flute) (favorite Mary pieces)) (have Mary flute))))

(check-sat)
(get-model)
