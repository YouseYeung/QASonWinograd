(declare-sort person)
(declare-const Jim person)
(declare-const Kevin person)
(declare-rel yellAt (person person))
(declare-rel comfort (person person))
(declare-rel doSthStrange (person))
(declare-rel upset (person))

(assert (not (= Jim Kevin)))

(assert (forall ((x person)) (exists ((y person)) (=> (upset x) (and (doSthStrange x) (comfort y x))))))

(assert (forall ((x person)) (exists ((y person)) (=> (doSthStrange x) (yellAt x y)))))

(assert (or (and (upset Kevin) (not (upset Jim))) (and (upset Jim) (not (upset Kevin)))))

(assert (or (and (doSthStrange Jim) (not (doSthStrange Kevin))) (and (doSthStrange Kevin) (not (doSthStrange Jim)))))

(assert (forall ((x person) (y person)) (= (and (= x Jim) (= y Kevin)) (yellAt x y))))
;(assert (forall ((x person) (y person)) (= (and (= x Jim) (= y Kevin)) (comfort x y))))

(assert (not (=> (yellAt Jim Kevin) (upset Jim))))
;(assert (not (=> (comfort Jim Kevin) (upset Kevin))))

(check-sat)
(get-model)
