(declare-sort person)
(declare-const Bob person)
(declare-const aMan person)
(declare-rel seeDoingSth (person person))
(declare-rel impressive (person))
(declare-rel impressed (person))


(assert (not (= Bob aMan)))
(assert (forall ((x person)) (or (= x Bob) (= x aMan))))

(assert (forall ((x person) (y person)) (=> (not (= x y)) (=> (seeDoingSth x y) (and (impressive y) (impressed x))))))
(assert (forall ((x person) (y person)) (=> (not (= x y)) (=> (impressive y) (seeDoingSth x y)))))
(assert (forall ((x person) (y person)) (=> (not (= x y)) (=> (impressed x) (seeDoingSth x y)))))

(assert (= (impressive Bob) (not (impressive aMan))))
(assert (= (impressed Bob) (not (impressed aMan))))

(assert (not (=> (seeDoingSth Bob aMan) (impressive aMan))))
;(assert (not (=> (seeDoingSth Bob aMan) (impressed Bob))))

(check-sat)
(get-model)
