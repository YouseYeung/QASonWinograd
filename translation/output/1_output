(declare-sort thing)
(declare-sort person)
(declare-const Noun_sombody thing)
(declare-const Noun_Alice thing)
(declare-const Noun_red_turban thing)
(declare-const Noun_she person)
(assert (not (= Noun_sombody Noun_Alice)))
(assert (not (= Noun_sombody Noun_red_turban)))
(assert (not (= Noun_Alice Noun_red_turban)))
(assert (forall ((x thing)) (or (= x Noun_sombody) (= x Noun_Alice) (= x Noun_red_turban) )))
(assert (forall ((x person)) (= x Noun_she)))
(declare-rel Verb_spot_quickly (thing person ))
(declare-rel Verb_spot_1 (thing ))
(declare-rel Verb_spot_2 (thing person ))
(declare-rel Verb_not_spot_quickly (thing person ))
(declare-rel Verb_obvious (person ))
(declare-rel Verb_obvious_1 (person ))
(declare-rel Verb_not_obvious (person ))
(declare-rel Verb_wear (person thing ))
(declare-rel Verb_wear_1 (person ))
(declare-rel Verb_wear_2 (person thing ))
(declare-rel Verb_not_wear (person thing ))
(declare-rel Verb_possess_pt (person thing))
(declare-rel Verb_possess_tt (thing thing))
(assert (forall ((a person) ) (= (Verb_obvious a)  (Verb_spot_quickly Noun_sombody a) )))
(assert (forall ((c person) ) (= (Verb_spot_quickly Noun_sombody c ) (not (Verb_not_spot_quickly Noun_sombody c )))))
(assert (forall ((b person) ) (= (Verb_obvious b ) (not (Verb_not_obvious b )))))
(assert (forall ((a person) ) (= (Verb_wear a)  (Verb_obvious a) )))
(assert (forall ((b person) ) (= (Verb_wear b Noun_red_turban ) (not (Verb_not_wear b Noun_red_turban )))))
(assert (forall ((b person) ) (= (Verb_obvious b ) (not (Verb_not_obvious b )))))
(assert (forall ((c person) ) (=> (Verb_spot_quickly Noun_sombody c ) (Verb_spot_1 Noun_sombody ))))
(assert (forall ((c person) ) (= (Verb_spot_quickly Noun_sombody c ) (Verb_spot_2 Noun_sombody c ))))
(assert (forall ((b person) ) (= (Verb_obvious b ) (Verb_obvious_1 b ))))
(assert (forall ((b person) ) (=> (Verb_wear b Noun_red_turban ) (Verb_wear_1 b ))))
(assert (forall ((b person) ) (= (Verb_wear b Noun_red_turban ) (Verb_wear_2 b Noun_red_turban ))))
(assert (Verb_spot_quickly Noun_Alice Noun_she ) )
(assert (= (Verb_wear_2 ) ))
(assert (not  (Verb_wear_2 )))
(check-sat)
