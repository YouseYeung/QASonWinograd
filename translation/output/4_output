(declare-sort thing)
(declare-sort person)
(declare-const Noun_Frank person)
(declare-const Noun_Tom person)
(declare-const Noun_toaster person)
(declare-const Noun_he person)
(assert (not (= Noun_Frank Noun_Tom)))
(assert (not (= Noun_Frank Noun_toaster)))
(assert (not (= Noun_Frank Noun_he)))
(assert (not (= Noun_Tom Noun_toaster)))
(assert (not (= Noun_Tom Noun_he)))
(assert (not (= Noun_toaster Noun_he)))
(assert (not (= Noun_toaster Noun_he)))
(assert (forall ((x person)) (or (= x Noun_Frank) (= x Noun_Tom) (= x Noun_toaster) (= x Noun_he) )))
(assert (forall ((x thing)) (or (= x Noun_toaster) (= x Noun_he) )))
(declare-rel Verb_do_bad (person ))
(declare-rel Verb_do_1 (person ))
(declare-rel Verb_upset_with (person person ))
(declare-rel Verb_upset_1 (person ))
(declare-rel Verb_upset_2 (person person ))
(declare-rel Verb_buy_from (person thing person ))
(declare-rel Verb_buy_1 (person ))
(declare-rel Verb_buy_2 (person thing ))
(declare-rel Verb_buy_3 (person thing person ))
(declare-rel Verb_not_work (thing ))
(declare-rel Verb_work_1 (thing ))
(declare-rel Verb_work (thing ))
(declare-rel Verb_sell_to (person thing person ))
(declare-rel Verb_sell_1 (person ))
(declare-rel Verb_sell_2 (person thing ))
(declare-rel Verb_sell_3 (person thing person ))
(assert (forall ((a person) (b person) ) (=> (not (= a b)) (= (Verb_upset_with b a)  (Verb_do_bad a) ))))
(assert (exists ((c thing)) (and (Verb_do_bad a)(Verb_buy_from b c a) (Verb_not_work d))) )
(assert ((= (Verb_work a) (not (Verb_not_work a)))))
(assert (forall ((a person) ) (= (exists ((b thing)) (and (Verb_sell_to a b a) (Verb_not_work c)))   (Verb_do_bad a) )))
(assert ((= (Verb_work a) (not (Verb_not_work a)))))
(assert (forall ((b person) ) (= (Verb_do_bad b ) (Verb_do_1 b ))))
(assert (forall ((b person) (c person) ) (=> (Verb_upset_with b c ) (Verb_upset_1 b ))))
(assert (forall ((b person) (c person) ) (= (Verb_upset_with b c ) (Verb_upset_2 b c ))))
(assert (forall ((b person) (c thing) (d person) ) (=> (Verb_buy_from b c d ) (Verb_buy_1 b ))))
(assert (forall ((b person) (c thing) (d person) ) (=> (Verb_buy_from b c d ) (Verb_buy_2 b c ))))
(assert (forall ((b person) (c thing) (d person) ) (= (Verb_buy_from b c d ) (Verb_buy_3 b c d ))))
(assert (forall ((b thing) ) (= (Verb_not_work b ) (Verb_work_1 b ))))
(assert (forall ((b person) (c thing) (d person) ) (=> (Verb_sell_to b c d ) (Verb_sell_1 b ))))
(assert (forall ((b person) (c thing) (d person) ) (=> (Verb_sell_to b c d ) (Verb_sell_2 b c ))))
(assert (forall ((b person) (c thing) (d person) ) (= (Verb_sell_to b c d ) (Verb_sell_3 b c d ))))
(assert (and (Verb_not_work Noun_toaster ) (Verb_upset_with Noun_Frank Noun_Tom ) ))
(assert (not  (Verb_buy_2 Noun_he Noun_toaster )))
(check-sat)
