(declare-sort thing)
(declare-sort person)
(declare-const Noun_cake thing)
(declare-const Noun_lot thing)
(declare-const Noun_butter thing)
(declare-const Noun_it thing)
(declare-const Noun_leftovers thing)
(declare-const Noun_refrigerator thing)
(assert (not (= Noun_cake Noun_lot)))
(assert (not (= Noun_cake Noun_butter)))
(assert (not (= Noun_cake Noun_it)))
(assert (not (= Noun_cake Noun_leftovers)))
(assert (not (= Noun_cake Noun_refrigerator)))
(assert (not (= Noun_lot Noun_butter)))
(assert (not (= Noun_lot Noun_it)))
(assert (not (= Noun_lot Noun_leftovers)))
(assert (not (= Noun_lot Noun_refrigerator)))
(assert (not (= Noun_butter Noun_it)))
(assert (not (= Noun_butter Noun_leftovers)))
(assert (not (= Noun_butter Noun_refrigerator)))
(assert (not (= Noun_it Noun_leftovers)))
(assert (not (= Noun_it Noun_refrigerator)))
(assert (not (= Noun_leftovers Noun_refrigerator)))
(assert (forall ((x thing)) (or (= x Noun_cake) (= x Noun_lot) (= x Noun_butter) (= x Noun_it) (= x Noun_leftovers) (= x Noun_refrigerator) )))
(declare-rel Verb_have (thing thing thing ))
(declare-rel Verb_not_have (thing thing thing ))
(assert (Verb_have Noun_cake Noun_lot Noun_butter))
(assert (= (Verb_have Noun_cake Noun_lot Noun_butter ) (not (Verb_not_have Noun_cake Noun_lot Noun_butter ))))
(assert (Verb_have Noun_refrigerator Noun_lot Noun_leftovers))
(assert (= (Verb_have Noun_refrigerator Noun_lot Noun_leftovers ) (not (Verb_not_have Noun_refrigerator Noun_lot Noun_leftovers ))))
(assert (not  (Verb_have Noun_refrigerator Noun_lot Noun_leftovers )))
(check-sat)
