(declare-sort thing)
(declare-sort person)
(declare-const Noun_bottom thing)
(declare-const Noun_top thing)
(declare-const Noun_which thing)
(declare-const Noun_cat thing)
(declare-const Noun_tree thing)
(declare-const Noun_dog thing)
(declare-const Noun_it thing)
(assert (not (= Noun_bottom Noun_top)))
(assert (not (= Noun_bottom Noun_which)))
(assert (not (= Noun_bottom Noun_cat)))
(assert (not (= Noun_bottom Noun_tree)))
(assert (not (= Noun_bottom Noun_dog)))
(assert (not (= Noun_bottom Noun_it)))
(assert (not (= Noun_top Noun_which)))
(assert (not (= Noun_top Noun_cat)))
(assert (not (= Noun_top Noun_tree)))
(assert (not (= Noun_top Noun_dog)))
(assert (not (= Noun_top Noun_it)))
(assert (not (= Noun_which Noun_cat)))
(assert (not (= Noun_which Noun_tree)))
(assert (not (= Noun_which Noun_dog)))
(assert (not (= Noun_which Noun_it)))
(assert (not (= Noun_cat Noun_tree)))
(assert (not (= Noun_cat Noun_dog)))
(assert (not (= Noun_cat Noun_it)))
(assert (not (= Noun_tree Noun_dog)))
(assert (not (= Noun_tree Noun_it)))
(assert (not (= Noun_dog Noun_it)))
(assert (forall ((x thing)) (or (= x Noun_bottom) (= x Noun_top) (= x Noun_which) (= x Noun_cat) (= x Noun_tree) (= x Noun_dog) (= x Noun_it) )))
(declare-rel Verb_wait_at (thing thing ))
(declare-rel Verb_wait_1 (thing ))
(declare-rel Verb_wait_2 (thing thing ))
(declare-rel Verb_not_wait_at (thing thing ))
(declare-rel Verb_run (thing ))
(declare-rel Verb_not_run (thing ))
(declare-rel Verb_chase (thing thing ))
(declare-rel Verb_not_chase (thing thing ))
(assert (forall ((a thing) (b thing) ) (=> (not (= a b)) (=> (and (Verb_chase a b) (Verb_run b))  (or (Verb_wait_at a Noun_bottom) (Verb_wait_at b Noun_top)) ))))
(assert (forall ((a thing) (b thing) ) (=> (not (= a b)) (=> (Verb_wait_at a Noun_bottom)  (and (Verb_chase a b) (Verb_run b)) ))))
(assert (forall ((a thing) (b thing) ) (=> (not (= a b)) (=> (Verb_wait_at a Noun_top)  (and (Verb_chase b a) (Verb_run a)) ))))
(assert (forall ((b thing) ) (= (Verb_wait_at b Noun_bottom ) (not (Verb_not_wait_at b Noun_bottom )))))
(assert (forall ((b thing) ) (= (Verb_run b ) (not (Verb_not_run b )))))
(assert (forall ((b thing) (c thing) ) (= (Verb_chase b c ) (not (Verb_not_chase b c )))))
(assert (forall ((b thing) ) (=> (Verb_wait_at b Noun_bottom ) (Verb_wait_1 b ))))
(assert (forall ((b thing) ) (= (Verb_wait_at b Noun_bottom ) (Verb_wait_2 b Noun_bottom ))))
(assert (and (Verb_run Noun_which ) (Verb_chase Noun_dog Noun_cat ) ))
(assert (not  (Verb_wait_at Noun_tree Noun_bottom )))
(check-sat)
