(declare-sort thing)
(declare-sort person)
(declare-const Noun_I person)
(declare-const Noun_butterfly_wing thing)
(declare-const Noun_table thing)
(declare-const Noun_it thing)
(declare-const Noun_heavy_book thing)
(assert (not (= Noun_butterfly_wing Noun_table)))
(assert (not (= Noun_butterfly_wing Noun_it)))
(assert (not (= Noun_butterfly_wing Noun_heavy_book)))
(assert (not (= Noun_table Noun_it)))
(assert (not (= Noun_table Noun_heavy_book)))
(assert (not (= Noun_it Noun_heavy_book)))
(assert (forall ((x person)) (= x Noun_I)))
(assert (forall ((x thing)) (or (= x Noun_butterfly_wing) (= x Noun_table) (= x Noun_it) (= x Noun_heavy_book) )))
(declare-rel Verb_put_on (person thing thing ))
(declare-rel Verb_put_1 (person ))
(declare-rel Verb_put_2 (person thing ))
(declare-rel Verb_put_3 (person thing thing ))
(declare-rel Verb_not_put_on (person thing thing ))
(declare-rel Verb_break (thing ))
(declare-rel Verb_break_1 (thing ))
(declare-rel Verb_not_break (thing ))
(declare-rel Verb_heavy (thing ))
(declare-rel Verb_heavy_1 (thing ))
(declare-rel Verb_not_heavy (thing ))
(declare-rel Verb_might ())
(declare-rel Verb_not_might ())
(declare-rel Verb_fragile (thing ))
(declare-rel Verb_fragile_1 (thing ))
(declare-rel Verb_not_fragile (thing ))
(assert (forall ((b thing) (c thing) ) (=> (not (= b c)) (=> (exists ((a person)) (and (Verb_put_on a b c) (Verb_heavy b)) ) (Verb_break c) ))))
(assert (forall ((b person) (c thing) (d thing) ) (= (Verb_put_on b c d ) (not (Verb_not_put_on b c d )))))
(assert (forall ((b thing) ) (= (Verb_break b ) (not (Verb_not_break b )))))
(assert (forall ((b thing) ) (= (Verb_heavy b ) (not (Verb_not_heavy b )))))
(assert (forall ((b thing) (c thing) ) (=> (not (= b c)) (= (exists ((a person)) (and (Verb_put_on a b c) (Verb_fragile b)) ) (and (Verb_might) (Verb_fragile) )))))
(assert (forall ((b person) (c thing) (d thing) ) (= (Verb_put_on b c d ) (not (Verb_not_put_on b c d )))))
(assert (= (Verb_might ) (not (Verb_not_might ))))
(assert (forall ((b thing) ) (= (Verb_fragile b ) (not (Verb_not_fragile b )))))
(assert (Verb_heavy Noun_heavy_book ))
(assert (= (Verb_heavy Noun_heavy_book ) (not (Verb_not_heavy Noun_heavy_book ))))
(assert (forall ((b person) (c thing) (d thing) ) (=> (Verb_put_on b c d ) (Verb_put_1 b ))))
(assert (forall ((b person) (c thing) (d thing) ) (=> (Verb_put_on b c d ) (Verb_put_2 b c ))))
(assert (forall ((b person) (c thing) (d thing) ) (= (Verb_put_on b c d ) (Verb_put_3 b c d ))))
(assert (forall ((b thing) ) (= (Verb_break b ) (Verb_break_1 b ))))
(assert (forall ((b thing) ) (= (Verb_heavy b ) (Verb_heavy_1 b ))))
(assert (forall ((b thing) ) (= (Verb_fragile b ) (Verb_fragile_1 b ))))
(assert (Verb_put_on Noun_I Noun_butterfly_wing Noun_table ) )
(assert (= (Verb_break Noun_table ) (and (not (Verb_break Noun_butterfly_wing )) (not (Verb_break Noun_heavy_book )) )))
(assert (= (Verb_break Noun_butterfly_wing ) (and (not (Verb_break Noun_table )) (not (Verb_break Noun_heavy_book )) )))
(assert (= (Verb_break Noun_heavy_book ) (and (not (Verb_break Noun_table )) (not (Verb_break Noun_butterfly_wing )) )))
(assert (not  (Verb_break Noun_butterfly_wing )))
(check-sat)
