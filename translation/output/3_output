(declare-sort thing)
(declare-sort person)
(declare-const Noun_older_student person)
(declare-const Noun_younger_one person)
(declare-const Noun_we person)
(declare-const Noun_they person)
(assert (not (= Noun_older_student Noun_younger_one)))
(assert (not (= Noun_older_student Noun_we)))
(assert (not (= Noun_older_student Noun_they)))
(assert (not (= Noun_younger_one Noun_we)))
(assert (not (= Noun_younger_one Noun_they)))
(assert (not (= Noun_we Noun_they)))
(assert (forall ((x person)) (or (= x Noun_older_student) (= x Noun_younger_one) (= x Noun_we) (= x Noun_they) )))
(declare-rel Verb_danger (person ))
(declare-rel Verb_do_bad (person ))
(declare-rel Verb_do_1 (person ))
(declare-rel Verb_bully (person person ))
(declare-rel Verb_resuce (person person ))
(declare-rel Verb_punish (person person ))
(assert (forall ((a person) (b person) ) (=> (not (= a b)) (=> (Verb_bully b a)  (and (Verb_do_bad b) (Verb_danger a)) ))))
(assert (forall ((b person) ) (= (Verb_danger b)  (exists ((a person)) (Verb_resuce a b) ))))
(assert (forall ((b person) ) (= (Verb_do_bad b)  (exists ((a person)) (Verb_punish a b) ))))
(assert (forall ((b person) ) (= (Verb_do_bad b ) (Verb_do_1 b ))))
(assert (= (Verb_punish Noun_we Noun_older_student ) (not (Verb_punish Noun_we Noun_younger_one )) ))
(assert (= (Verb_punish Noun_we Noun_younger_one ) (not (Verb_punish Noun_we Noun_older_student )) ))
(assert (Verb_bully Noun_older_student Noun_younger_one ) )
(assert (not  (Verb_punish Noun_we Noun_we )))
(check-sat)
