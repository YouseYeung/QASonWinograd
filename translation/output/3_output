(declare-sort thing)
(declare-sort person)
(declare-const Noun__map thing)
(declare-const Noun_it thing)
(declare-const Noun_my__map thing)
(declare-const Noun_my_t thing)
(declare-const Noun_building thing)
(declare-const Noun_my_p person)
(assert (not (= Noun__map Noun_it)))
(assert (not (= Noun__map Noun_my__map)))
(assert (not (= Noun__map Noun_my_t)))
(assert (not (= Noun__map Noun_building)))
(assert (not (= Noun_it Noun_my__map)))
(assert (not (= Noun_it Noun_my_t)))
(assert (not (= Noun_it Noun_building)))
(assert (not (= Noun_my__map Noun_my_t)))
(assert (not (= Noun_my__map Noun_building)))
(assert (not (= Noun_my_t Noun_building)))
(assert (forall ((x thing)) (or (= x Noun__map) (= x Noun_it) (= x Noun_my__map) (= x Noun_my_t) (= x Noun_building) )))
(assert (forall ((x person)) (= x Noun_my_p)))
(declare-rel Verb_famous (thing ))
(declare-rel Verb_not_famous (thing ))
(declare-rel Verb_show (thing thing ))
(declare-rel Verb_not_show (thing thing ))
(declare-rel Verb_good (thing ))
(declare-rel Verb_not_good (thing ))
(declare-rel Verb_possess_pt (person thing))
(declare-rel Verb_possess_tt (thing thing))
(assert (forall ((a thing) ) (=> (Verb_show Noun__map a)  (and (Verb_good Noun__map) (Verb_famous a)) )))
(assert (forall ((b thing) ) (= (Verb_famous b ) (not (Verb_not_famous b )))))
(assert (forall ((c thing) ) (= (Verb_show Noun__map c ) (not (Verb_not_show Noun__map c )))))
(assert (= (Verb_good Noun__map ) (not (Verb_not_good Noun__map ))))
(assert (= (Verb_famous Noun__map ) (and (not (Verb_famous Noun_my__map )) (not (Verb_famous Noun_my_t )) (not (Verb_famous Noun_building )) )))
(assert (= (Verb_famous Noun_my__map ) (and (not (Verb_famous Noun__map )) (not (Verb_famous Noun_my_t )) (not (Verb_famous Noun_building )) )))
(assert (= (Verb_famous Noun_my_t ) (and (not (Verb_famous Noun__map )) (not (Verb_famous Noun_my__map )) (not (Verb_famous Noun_building )) )))
(assert (= (Verb_famous Noun_building ) (and (not (Verb_famous Noun__map )) (not (Verb_famous Noun_my__map )) (not (Verb_famous Noun_my_t )) )))
(assert (Verb_show Noun_my__map Noun_building ) )
(assert (not  (Verb_famous Noun_my_t )))
(check-sat)
