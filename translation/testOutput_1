(declare-sort person)
(declare-const I person)
(declare-sort thing)
(declare-const water_bottle thing)
(declare-const backpack thing)
(declare-const it thing)
(assert (not (= water_bottle backpack)))
(assert (not (= water_bottle it)))
(assert (not (= backpack it)))
(assert (forall ((x person)) (= x I)))
(assert (forall ((x thing)) (or (= x water_bottle) (= x backpack) (= x it) )))
(declare-rel take_out_of (person thing thing ))
(declare-rel take_1 (person ))
(declare-rel take_2 (person thing ))
(declare-rel take_3 (person thing thing ))
(declare-rel handy (thing ))
(declare-rel lighter (thing ))
(assert (forall ((b thing) (c thing) ) (=> (not (= b c)) (=> (exists ((a person)) (take_out_of a b c))   (and (lighter c) (handy b)) ))))
(assert (forall ((b person) (c thing) (d thing) ) (=> (take_out_of b c d ) (take_1 b ))))
(assert (forall ((b person) (c thing) (d thing) ) (=> (take_out_of b c d ) (take_2 b c ))))
(assert (forall ((b person) (c thing) (d thing) ) (= (take_out_of b c d ) (take_3 b c d ))))
(assert (= (lighter water_bottle ) (not (lighter backpack )) ))
(assert (= (lighter backpack ) (not (lighter water_bottle )) ))
(assert (take_out_of I water_bottle backpack ) )
(assert (not (lighter water_bottle )))
(check-sat)
