(declare-sort person)
(declare-const fireman person)
(declare-const police person)
(declare-const they person)
(assert (not (= fireman police)))
(assert (not (= fireman they)))
(assert (not (= police they)))
(assert (forall ((x person)) (or (= x fireman) (= x police) (= x they) )))
(declare-rel come (person ))
(declare-rel arrive_after (person person ))
(declare-rel arrive_1 (person ))
(declare-rel arrive_before (person person ))
(assert (forall ((a person) (b person) ) (=> (not (= a b)) (=> (come a)  (and (arrive_after a b) (arrive_before b a)) ))))
(assert (forall ((a person) (b person) ) (=> (not (= a b)) (=> (arrive_after a b)  (come a) ))))
(assert (forall ((a person) (b person) ) (=> (not (= a b)) (=> (arrive_before b a)  (come a) ))))
(assert (forall ((b person) (c person) ) (=> (arrive_after b c ) (arrive_1 b ))))
(assert (= (come fireman ) (and (not (come police )) (not (come they )) )))
(assert (= (come police ) (and (not (come fireman )) (not (come they )) )))
(assert (= (come they ) (and (not (come fireman )) (not (come police )) )))
(assert (arrive_after fireman police ) )
(assert (not (come fireman)))
(check-sat)
