(declare-sort person)
(declare-const Sid person)
(declare-const he_p person)
(declare-const mark person)
(declare-sort thing)
(declare-const he_theory thing)
(declare-const theory thing)
(declare-const he_t thing)
(assert (not (= Sid he_p)))
(assert (not (= Sid mark)))
(assert (not (= he_p mark)))
(assert (not (= he_theory theory)))
(assert (not (= he_theory he_t)))
(assert (not (= theory he_t)))
(assert (forall ((x person)) (or (= x Sid) (= x he_p) (= x mark) )))
(assert (forall ((x thing)) (or (= x he_theory) (= x theory) (= x he_t) )))
(declare-rel explain_to (person thing person ))
(declare-rel explain_1 (person ))
(declare-rel explain_2 (person thing ))
(declare-rel not_convince (person person ))
(declare-rel convince_1 (person ))
(declare-rel convince (person person ))
(declare-rel not_understand (person person ))
(declare-rel understand_1 (person ))
(declare-rel understand (person person ))
(assert (forall ((a person) (c person) ) (=> (not (= a c)) (=> (exists ((b thing)) (explain_to a b c))   (and (not_convince a c) (not_understand c a)) ))))
(assert (forall ((a person) (b person) ) (=> (not (= a b)) (= (not (convince a b)) (not_convince a b)))))
(assert (forall ((a person) (b person) ) (=> (not (= a b)) (= (not (understand a b)) (not_understand a b)))))
(assert (forall ((b person) (c thing) (d person) ) (=> (explain_to b c d ) (explain_1 b ))))
(assert (forall ((b person) (c thing) (d person) ) (=> (explain_to b c d ) (explain_2 b c ))))
(assert (forall ((b person) (c person) ) (=> (not_convince b c ) (convince_1 b ))))
(assert (forall ((b person) (c person) ) (=> (not_understand b c ) (understand_1 b ))))
(assert (= (not_convince Sid he_p ) (and (not (not_convince Sid mark )) (not (not_convince he_p mark )) (not (not_convince he_p Sid )) (not (not_convince mark Sid )) (not (not_convince mark he_p )) )))
(assert (= (not_convince Sid mark ) (and (not (not_convince Sid he_p )) (not (not_convince he_p mark )) (not (not_convince he_p Sid )) (not (not_convince mark Sid )) (not (not_convince mark he_p )) )))
(assert (= (not_convince he_p mark ) (and (not (not_convince Sid he_p )) (not (not_convince Sid mark )) (not (not_convince he_p Sid )) (not (not_convince mark Sid )) (not (not_convince mark he_p )) )))
(assert (= (not_convince he_p Sid ) (and (not (not_convince Sid he_p )) (not (not_convince Sid mark )) (not (not_convince he_p mark )) (not (not_convince mark Sid )) (not (not_convince mark he_p )) )))
(assert (= (not_convince mark Sid ) (and (not (not_convince Sid he_p )) (not (not_convince Sid mark )) (not (not_convince he_p mark )) (not (not_convince he_p Sid )) (not (not_convince mark he_p )) )))
(assert (= (not_convince mark he_p ) (and (not (not_convince Sid he_p )) (not (not_convince Sid mark )) (not (not_convince he_p mark )) (not (not_convince he_p Sid )) (not (not_convince mark Sid )) )))
(assert (explain_to Sid he_theory mark ) )
(assert (not (not_convince Sid he_p )))
(check-sat)
