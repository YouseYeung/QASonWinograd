(declare-sort person)
(declare-const man person)
(declare-const son person)
(declare-const he person)
(declare-rel lift (person person ))
(declare-rel heavy (person ))
(declare-rel weak (person ))
(assert (not (= man son)))
(assert (not (= man he)))
(assert (not (= son he)))
(assert (forall ((x person)) (or (= x man) (= x son) (= x he) )))
(assert (forall ((a person) (b person) ) (=> (not (= a b)) (=> (and (weak a ) (heavy b ) ) (lift a b ) ))))
(assert (forall ((a person) (b person) ) (=> (not (= a b)) (=> (lift a b ) (and (weak a ) (heavy b ) ) ))))
(assert (= (weak man) (and (not (weak son)) (not (weak he)) )))
(assert (= (weak son) (and (not (weak man)) (not (weak he)) )))
(assert (= (weak he) (and (not (weak man)) (not (weak son)) )))
(assert (lift man son ))
(assert (not (weak he)))
(check-sat)
