  Parser.parse: parse {
    Parser.ensureExecuted 
  }
  Parser.setEvaluation: 0 candidates 
  Example: The drain is clogged with hair {
    Tokens: [the, drain, is, clogged, with, hair]
    Lemmatized tokens: [the, drain, be, clog, with, hair]
    POS tags: [DT, NN, VBD-AUX, VBN, IN, NN]
    NER tags: [O, O, O, O, O, O]
    NER values: [null, null, null, null, null, null]
    Dependency children: [[], [det->0], [], [nsubjpass->1, auxpass->2, nmod:with->5], [], [case->4]]
  }

  Parser.parse: parse {
    Parser.ensureExecuted 
  }
  Parser.setEvaluation: 0 candidates 
  Example: If thing B is clogged with thing C, then thing B must be cleaned, and thing C must be removed {
    Tokens: [if, thing, b, is, clogged, with, thing, c, ,, then, thing, b, must, be, cleaned, ,, and, thing, c, must, be, removed]
    Lemmatized tokens: [if, thing, b, be, clog, with, thing, c, ,, then, thing, b, must, be, clean, ,, and, thing, c, must, be, remove]
    POS tags: [IN, NN, NN, VBD-AUX, VBN, IN, NN, NN, ,, RB, NN, NN, VBD-AUX, VBD-AUX, VBN, ,, CC, NN, NN, VBD-AUX, VBD-AUX, VBN]
    NER tags: [O, O, O, O, O, O, O, O, O, O, O, O, O, O, O, O, O, O, O, O, O, O]
    NER values: [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
    Dependency children: [[], [], [compound->1], [], [mark->0, nsubjpass->2, auxpass->3, nmod:with->7], [], [], [case->5, compound->6], [], [], [], [advmod->9, compound->10], [], [], [punct->15, cc->16, advcl->4, conj:and->21, punct->8, nsubjpass->11, aux->12, auxpass->13], [], [], [], [compound->17], [], [], [nsubjpass->18, aux->19, auxpass->20]]
  }

  Parser.parse: parse {
    Parser.ensureExecuted 
  }
  Parser.setEvaluation: 0 candidates 
  Example: What has to be removed {
    Tokens: [what, has, to, be, removed]
    Lemmatized tokens: [what, have, to, be, remove]
    POS tags: [WDT, VBD-AUX, TO, VBD-AUX, VBN]
    NER tags: [O, O, O, O, O]
    NER values: [null, null, null, null, null]
    Dependency children: [[], [nsubj->0, xcomp->4], [], [], [mark->2, auxpass->3]]
  }