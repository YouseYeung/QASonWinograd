  Parser.parse: parse {
    Parser.ensureExecuted 
  }
  Parser.setEvaluation: 0 candidates 
  Example: Susan knows about Ann's personal problems. because she is nosy {
    Tokens: [susan, knows, about, ann, 's, personal, problems, ., because, she, is, nosy]
    Lemmatized tokens: [Susan, know, about, Ann, 's, personal, problem, ., because, she, be, nosy]
    POS tags: [NNP, VBZ, IN, NNP, POS, JJ, NNS, ., IN, PRP, VBD-AUX, JJ]
    NER tags: [PERSON, O, O, PERSON, O, O, O, O, O, O, O, O]
    NER values: [null, null, null, null, null, null, null, null, null, null, null, null]
    Dependency children: [[], [nsubj->0, nmod:about->6, punct->7], [], [case->4], [], [], [case->2, nmod:poss->3, amod->5], [], [], [], [], [cop->10, mark->8, nsubj->9]]
  }

  Parser.parse: parse {
    Parser.ensureExecuted 
  }
  Parser.setEvaluation: 0 candidates 
  Example: If person B is nosy, then person B will know about somebody’s personal problems. {
    Tokens: [if, person, b, is, nosy, ,, then, person, b, will, know, about, somebody, 's, personal, problems, .]
    Lemmatized tokens: [if, person, b, be, nosy, ,, then, person, b, will, know, about, somebody, 's, personal, problem, .]
    POS tags: [IN, NN, NN, VBD-AUX, JJ, ,, RB, NN, NN, VBD-AUX, VB, IN, NN, POS, JJ, NNS, .]
    NER tags: [O, O, O, O, O, O, O, O, O, O, O, O, O, O, O, O, O]
    NER values: [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
    Dependency children: [[], [], [compound->1], [], [mark->0, nsubj->2, cop->3], [], [], [], [advmod->6, compound->7], [], [nmod:about->15, punct->16, advcl->4, punct->5, nsubj->8, aux->9], [], [case->13], [], [], [case->11, nmod:poss->12, amod->14], []]
  }

  Parser.parse: parse {
    Parser.ensureExecuted 
  }
  Parser.setEvaluation: 0 candidates 
  Example: If person B is indiscreet, then somebody will know about person B’s personal problems {
    Tokens: [if, person, b, is, indiscreet, ,, then, somebody, will, know, about, person, b, 's, personal, problems]
    Lemmatized tokens: [if, person, b, be, indiscreet, ,, then, somebody, will, know, about, person, b, 's, personal, problem]
    POS tags: [IN, NN, NN, VBD-AUX, JJ, ,, RB, NN, VBD-AUX, VB, IN, NN, NN, POS, JJ, NNS]
    NER tags: [O, O, O, O, O, O, O, O, O, O, O, O, O, O, O, O]
    NER values: [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
    Dependency children: [[], [], [compound->1], [], [mark->0, nsubj->2, cop->3], [], [], [advmod->6], [], [nmod:about->15, advcl->4, punct->5, nsubj->7, aux->8], [], [], [compound->11, case->13], [], [], [case->10, nmod:poss->12, amod->14]]
  }

  Parser.parse: parse {
    Parser.ensureExecuted 
  }
  Parser.setEvaluation: 0 candidates 
  Example: Who is nosy {
    Tokens: [who, is, nosy]
    Lemmatized tokens: [who, be, nosy]
    POS tags: [WP, VBD-AUX, JJ]
    NER tags: [O, O, O]
    NER values: [null, null, null]
    Dependency children: [[], [], [nsubj->0, cop->1]]
  }
