<<<<<<< HEAD
(declare-sort thing)
(declare-const personal_somebody_problem thing)
(declare-const personal_b_problem thing)
(declare-sort person)
(declare-const Susan person)
(declare-const she person)
(assert (not (= personal_somebody_problem personal_b_problem)))
(assert (not (= Susan she)))
(assert (forall ((x thing)) (or (= x personal_somebody_problem) (= x personal_b_problem) )))
(assert (forall ((x person)) (or (= x Susan) (= x she) )))
(declare-rel know_about (person person thing ))
(declare-rel know_1 (person ))
(declare-rel know_2 (person person ))
(declare-rel nosy (person ))
(declare-rel indiscreet (person ))
(assert (forall ((a person) ) (= (nosy a)  (and (exist ((c person)) (know_about a c personal_somebody_problem) (indiscreet a) (exist ((c person)) (know_about c a personal_b_problem) )))))
(assert (forall ((b person) (c person) ) (= (know_about b c problem ) (know_1 b ))))
(assert (forall ((b person) (c person) ) (= (know_about b c problem ) (know_2 b c ))))
(assert (= (nosy Susan ) (not (nosy she )) )))
(assert (= (nosy she ) (not (nosy Susan )) )))
(assert (not (nosy she)))
=======
(declare-sort person)
(declare-const I person)
(declare-sort thing)
(declare-const water thing)
(declare-const bottle thing)
(declare-const it thing)
(assert (not (= water bottle)))
(assert (not (= water it)))
(assert (not (= bottle it)))
(assert (forall ((x person)) (= x I)))
(assert (forall ((x thing)) (or (= x water) (= x bottle) (= x it) )))
(declare-rel empty (thing ))
(declare-rel pour_into (person thing thing ))
(declare-rel pour (person thing ))
(declare-rel full (thing ))
(assert (forall ((a thing) (d thing) ) (=> (not (= a d)) (=>  (c thing)) (pour_into b c d)  (and (empty a) (full d)) ))))
(assert (forall ((a person) (b thing) (c thing) ) (= (pour_into a b c ) (pour a b ))))
(assert (= (full water ) (and (not (full bottle )) (not (full it )) )))
(assert (= (full bottle ) (and (not (full water )) (not (full it )) )))
(assert (= (full it ) (and (not (full water )) (not (full bottle )) )))
(assert (pour I water bottle ))
(assert (not (full bottle)))
>>>>>>> fc72ca9f687ee0a2829db6ee3b35e88bf90c2b8e
(check-sat)
