(declare-sort person)
(declare-const I person)
(declare-sort thing)
(declare-const bottle thing)
(declare-const table thing)
(declare-const it thing)
(assert (not (= bottle table)))
(assert (not (= bottle it)))
(assert (not (= table it)))
(assert (forall ((x person)) (= x I)))
(assert (forall ((x thing)) (or (= x bottle) (= x table) (= x it) )))
(declare-rel not_balance_on (person thing thing ))
(declare-rel balance_1 (person ))
(declare-rel balance_2 (person thing ))
(declare-rel balance_on (person thing thing ))
(declare-rel uneven (thing ))
(declare-rel heavy_top (thing ))
(assert (forall ((b thing) (c thing) ) (=> (not (= b c)) (= (or (heavy_top b) (uneven c))  (exists ((a person)) (not_balance_on a b c))  ))))
(assert (forall ((b thing) (c thing) ) (=> (not (= b c)) (exists ((a person)) (= (balance_on a b c) (not (not_balance_on a b c)) )))))
(assert (forall ((b person) (c thing) (d thing) ) (=> (not_balance_on b c d ) (balance_1 b ))))
(assert (forall ((b person) (c thing) (d thing) ) (=> (not_balance_on b c d ) (balance_2 b c ))))

