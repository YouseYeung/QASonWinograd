 Parser.parse: parse {
    Parser.ensureExecuted 
  }
  Parser.setEvaluation: 0 candidates 
  Example: 42.Bob paid for Charlie's college education. He is very grateful. {
    Tokens: [42, ., bob, paid, for, charlie, 's, college, education, ., he, is, very, grateful, .]
    Lemmatized tokens: [42, ., Bob, pay, for, Charlie, 's, college, education, ., he, be, very, grateful, .]
    POS tags: [CD, ., NNP, VBD, IN, NNP, POS, NN, NN, ., PRP, VBD-AUX, RB, JJ, .]
    NER tags: [NUMBER, O, PERSON, O, O, PERSON, O, O, O, O, O, O, O, O, O]
    NER values: [42.0, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
    Dependency children: [[punct->1], [], [], [nmod:for->8, punct->9, nsubj->2], [], [case->6], [], [], [case->4, nmod:poss->5, compound->7], [], [], [], [], [nsubj->10, cop->11, advmod->12, punct->14], []]
  }

  Parser.parse: parse {
    Parser.ensureExecuted 
  }
  Parser.setEvaluation: 0 candidates 
  Example: If person B does charity, then person B is generous {
    Tokens: [if, person, b, does, charity, ,, then, person, b, is, generous]
    Lemmatized tokens: [if, person, b, do, charity, ,, then, person, b, be, generous]
    POS tags: [IN, NN, NN, VBD-AUX, NN, ,, RB, NN, NN, VBD-AUX, JJ]
    NER tags: [O, O, O, O, O, O, O, O, O, O, O]
    NER values: [null, null, null, null, null, null, null, null, null, null, null]
    Dependency children: [[], [], [compound->1], [mark->0, nsubj->2, dobj->4, punct->5, parataxis->10], [], [], [], [], [compound->7], [], [advmod->6, nsubj->8, cop->9]]
  }

  Parser.parse: parse {
    Parser.ensureExecuted 
  }
  Parser.setEvaluation: 0 candidates 
  Example: If somebody helps person B, then person B is grateful {
    Tokens: [if, somebody, helps, person, b, ,, then, person, b, is, grateful]
    Lemmatized tokens: [if, somebody, help, person, b, ,, then, person, b, be, grateful]
    POS tags: [IN, NN, VBZ, NN, NN, ,, RB, NN, NN, VBD-AUX, JJ]
    NER tags: [O, O, O, O, O, O, O, O, O, O, O]
    NER values: [null, null, null, null, null, null, null, null, null, null, null]
    Dependency children: [[], [], [mark->0, nsubj->1, dobj->4, punct->5, parataxis->10], [], [compound->3], [], [], [], [compound->7], [], [advmod->6, nsubj->8, cop->9]]
  }

  Parser.parse: parse {
    Parser.ensureExecuted 
  }
  Parser.setEvaluation: 0 candidates 
  Example: If person B pays for person C's college education, then person B does charity, and person B helps person C . {
    Tokens: [if, person, b, pays, for, person, c, 's, college, education, ,, then, person, b, does, charity, ,, and, person, b, helps, person, c, .]
    Lemmatized tokens: [if, person, b, pay, for, person, c, 's, college, education, ,, then, person, b, do, charity, ,, and, person, b, help, person, c, .]
    POS tags: [IN, NN, NN, VBZ, IN, NN, NN, POS, NN, NN, ,, RB, NN, NN, VBD-AUX, NN, ,, CC, NN, NN, VBZ, NN, NN, .]
    NER tags: [O, O, O, O, O, O, O, O, O, O, O, O, O, O, O, O, O, O, O, O, O, O, O, O]
    NER values: [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
    Dependency children: [[], [], [compound->1], [mark->0, nsubj->2, nmod:for->9], [], [], [compound->5, case->7], [], [], [case->4, nmod:poss->6, compound->8], [], [], [], [advmod->11, compound->12], [dobj->15, punct->16, cc->17, advcl->3, conj:and->20, punct->23, punct->10, nsubj->13], [], [], [], [], [compound->18], [nsubj->19, dobj->22], [], [compound->21], []]
  }

  Parser.parse: parse {
    Parser.ensureExecuted 
  }
  Parser.setEvaluation: 0 candidates 
  Example: Who is grateful {
    Tokens: [who, is, grateful]
    Lemmatized tokens: [who, be, grateful]
    POS tags: [WP, VBD-AUX, JJ]
    NER tags: [O, O, O]
    NER values: [null, null, null]
    Dependency children: [[], [], [nsubj->0, cop->1]]
  }
