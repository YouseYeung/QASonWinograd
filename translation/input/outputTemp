 Parser.setEvaluation: 0 candidates 
  Example: 26.Sid explained his theory to Mark. but he couldn't understand him {
    Tokens: [26, ., sid, explained, his, theory, to, mark, ., but, he, could, n't, understand, him]
    Lemmatized tokens: [26, ., Sid, explain, he, theory, to, mark, ., but, he, could, not, understand, he]
    POS tags: [CD, ., NNP, VBD, PRP$, NN, TO, NN, ., CC, PRP, VBD-AUX, RB, VB, PRP]
    NER tags: [NUMBER, O, PERSON, O, O, O, O, O, O, O, O, O, O, O, O]
    NER values: [26.0, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
    Dependency children: [[punct->1], [], [], [dobj->5, nmod:to->7, punct->8, nsubj->2], [], [nmod:poss->4], [], [case->6], [], [], [], [], [], [dobj->14, cc->9, nsubj->10, aux->11, neg->12], []]
  }

  Parser.parse: parse {
    Parser.ensureExecuted 
  }
  Parser.setEvaluation: 0 candidates 
  Example: If person B explains something to person C, then person B might convince person C, and person C might understand person B {
    Tokens: [if, person, b, explains, something, to, person, c, ,, then, person, b, might, convince, person, c, ,, and, person, c, might, understand, person, b]
    Lemmatized tokens: [if, person, b, explain, something, to, person, c, ,, then, person, b, might, convince, person, c, ,, and, person, c, might, understand, person, b]
    POS tags: [IN, NN, NN, VBZ, NN, TO, NN, NN, ,, RB, NN, NN, VBD-AUX, VB, NN, NN, ,, CC, NN, NN, VBD-AUX, VB, NN, NN]
    NER tags: [O, O, O, O, O, O, O, O, O, O, O, O, O, O, O, O, O, O, O, O, O, O, O, O]
    NER values: [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
    Dependency children: [[], [], [compound->1], [mark->0, nsubj->2, dobj->4, nmod:to->7], [], [], [], [case->5, compound->6], [], [], [], [advmod->9, compound->10], [], [dobj->15, punct->16, cc->17, advcl->3, conj:and->21, punct->8, nsubj->11, aux->12], [], [compound->14], [], [], [], [compound->18], [], [nsubj->19, aux->20, dobj->23], [], [compound->22]]
  }

  Parser.parse: parse {
    Parser.ensureExecuted 
  }
  Parser.setEvaluation: 0 candidates 
  Example: Who did not understand whom {
    Tokens: [who, did, not, understand, whom]
    Lemmatized tokens: [who, do, not, understand, whom]
    POS tags: [WP, VBD-AUX, RB, VB, WP]
    NER tags: [O, O, O, O, O]
    NER values: [null, null, null, null, null]
    Dependency children: [[], [], [], [nsubj->0, aux->1, neg->2, dobj->4], []]
  }
