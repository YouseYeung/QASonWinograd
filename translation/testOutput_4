(declare-sort person)
(declare-const I person)
(declare-sort thing)
(declare-const old_rag thing)
(declare-const knife thing)
(declare-const drawer thing)
(declare-const it thing)
(declare-const trash thing)
(assert (not (= old_rag knife)))
(assert (not (= old_rag drawer)))
(assert (not (= old_rag it)))
(assert (not (= old_rag trash)))
(assert (not (= knife drawer)))
(assert (not (= knife it)))
(assert (not (= knife trash)))
(assert (not (= drawer it)))
(assert (not (= drawer trash)))
(assert (not (= it trash)))
(assert (forall ((x person)) (= x I)))
(assert (forall ((x thing)) (or (= x old_rag) (= x knife) (= x drawer) (= x it) (= x trash) )))
(declare-rel use_to (person thing thing ))
(declare-rel use_1 (person ))
(declare-rel use_2 (person thing ))
(declare-rel use_3 (person thing thing ))
(declare-rel clean (thing ))
(declare-rel dirty (thing person thing thing ))
(declare-rel put_in (person thing thing ))
(declare-rel put_1 (person ))
(declare-rel put_2 (person thing ))
(declare-rel put_3 (person thing thing ))
(assert (forall ((b thing) (c thing) (d thing) ) (=> (not (= b c)) (not (= b d)) (not (= c d)) (= (exists ((e person)) (use_to e b c))   (exists ((e person)) (and (dirty b e b c) (clean d)))  ))))
(assert (forall ((b thing) ) (=> (clean b)  (exists ((a person)) (put_in a b drawer))  )))
(assert (forall ((b thing) ) (=> (dirty b)  (exists ((a person)) (put_in a b trash))  )))
(assert (forall ((b person) (c thing) (d thing) ) (=> (use_to b c d ) (use_1 b ))))
(assert (forall ((b person) (c thing) (d thing) ) (=> (use_to b c d ) (use_2 b c ))))
(assert (forall ((b person) (c thing) (d thing) ) (= (use_to b c d ) (use_3 b c d ))))
(assert (forall ((b person) (c thing) ) (=> (put_in b c drawer ) (put_1 b ))))
(assert (forall ((b person) (c thing) ) (=> (put_in b c drawer ) (put_2 b c ))))
(assert (forall ((b person) (c thing) ) (= (put_in b c drawer ) (put_3 b c drawer ))))
(assert (= (put_in I old_rag trash ) (and (not (put_in I knife trash )) (not (put_in I drawer trash )) (not (put_in I trash trash )) )))
(assert (= (put_in I knife trash ) (and (not (put_in I old_rag trash )) (not (put_in I drawer trash )) (not (put_in I trash trash )) )))
(assert (= (put_in I drawer trash ) (and (not (put_in I old_rag trash )) (not (put_in I knife trash )) (not (put_in I trash trash )) )))
(assert (= (put_in I trash trash ) (and (not (put_in I old_rag trash )) (not (put_in I knife trash )) (not (put_in I drawer trash )) )))
(assert (and (use_3 I old_rag knife ) (clean knife ) ))
(assert (not (put_in I it trash )))
(check-sat)
